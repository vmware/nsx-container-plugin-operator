apiVersion: apps/v1
kind: Deployment
metadata:
  labels: {component: nsx-ncp, tier: nsx-networking, version: v1}
  name: nsx-ncp
  namespace: nsx-system
spec:
  replicas: {{.NcpReplicas}}
  selector:
    matchLabels: {component: nsx-ncp, tier: nsx-networking, version: v1}
  template:
    metadata:
      labels: {component: nsx-ncp, tier: nsx-networking, version: v1}
    spec:
      containers:
      - env:
        - name: NCP_NAME
          valueFrom:
            fieldRef: {fieldPath: metadata.name}
        - name: NCP_NAMESPACE
          valueFrom:
            fieldRef: {fieldPath: metadata.namespace}
        image:  "{{.NcpImage}}"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command: [/bin/sh, -c, check_pod_liveness nsx-ncp 5]
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        name: nsx-ncp
        volumeMounts:
        - {mountPath: /etc/nsx-ujo, name: projected-volume, readOnly: true}
      hostNetwork: true
      serviceAccountName: ncp-svc-account
      tolerations:
      - {effect: NoSchedule, key: node-role.kubernetes.io/master}
      volumes:
      - name: projected-volume
        projected:
          sources:
          - configMap:
              items:
              - {key: ncp.ini, path: ncp.ini}
              name: nsx-ncp-config
          - configMap:
              items:
              - {key: version, path: VERSION}
              name: nsx-ncp-version-config
          - secret:
              items:
              - {key: tls.crt, path: lb-cert/tls.crt}
              - {key: tls.key, path: lb-cert/tls.key}
              name: lb-secret
          - secret:
              items:
              - {key: tls.crt, path: nsx-cert/tls.crt}
              - {key: tls.key, path: nsx-cert/tls.key}
              - {key: tls.ca, path: nsx-cert/tls.ca}
              name: nsx-secret
